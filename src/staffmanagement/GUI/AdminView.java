/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package staffmanagement.GUI;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import staffmanagement.EmployeeController;
import staffmanagement.ShiftController;

/**
 *
 * @author penpen
 */
public class AdminView extends javax.swing.JFrame {

    EmployeeController employeeControl;
    ShiftController shiftControl;

    /**
     * Creates new form AdminMainMenu
     */
    public AdminView() {
        initComponents();
        employeeControl = new EmployeeController();
        shiftControl = new ShiftController();
        setButtonVisbiliy();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        StaffManagementPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("StaffManagementPU").createEntityManager();
        shiftQuery = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Shift s");
        shiftList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : shiftQuery.getResultList();
        staffbookingQuery = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery.getResultList();
        staffQuery = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staff s");
        staffList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffQuery.getResultList();
        staffQuery1 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staff s");
        staffList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffQuery1.getResultList();
        staffQuery2 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staff s");
        staffList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffQuery2.getResultList();
        staffQuery3 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staff s");
        staffList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffQuery3.getResultList();
        staffQuery4 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staff s");
        staffList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffQuery4.getResultList();
        staffleaveQuery = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffleave s");
        staffleaveList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffleaveQuery.getResultList();
        shiftQuery1 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Shift s");
        shiftList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : shiftQuery1.getResultList();
        shiftQuery2 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Shift s");
        shiftList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : shiftQuery2.getResultList();
        shiftQuery3 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Shift s");
        shiftList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : shiftQuery3.getResultList();
        shiftQuery4 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Shift s");
        shiftList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : shiftQuery4.getResultList();
        staffbookingQuery1 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery1.getResultList();
        staffbookingQuery2 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery2.getResultList();
        staffbookingQuery3 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery3.getResultList();
        staffbookingQuery4 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery4.getResultList();
        staffbookingQuery5 = java.beans.Beans.isDesignTime() ? null : StaffManagementPUEntityManager.createQuery("SELECT s FROM Staffbooking s");
        staffbookingList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : staffbookingQuery5.getResultList();
        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        buttonContainer = new javax.swing.JPanel();
        bookShift = new javax.swing.JButton();
        cancelShift = new javax.swing.JButton();
        leave = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        staffInfo = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        allStaff = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        allShifts = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        staffOnLeave = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookedStaff = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        addNewEmpl = new javax.swing.JMenuItem();
        removeEmployee = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gemini Hospital Hatfield");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(555, 433));
        jPanel1.setLayout(new java.awt.BorderLayout());

        heading.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/staffmanagement/logo.png"))); // NOI18N
        heading.setText("Gemini Hospital Hatfield");
        jPanel1.add(heading, java.awt.BorderLayout.PAGE_START);

        buttonContainer.setPreferredSize(new java.awt.Dimension(135, 351));

        bookShift.setBackground(new java.awt.Color(0, 51, 51));
        bookShift.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookShift.setForeground(new java.awt.Color(255, 255, 255));
        bookShift.setText("Book Staff");
        bookShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookShiftActionPerformed(evt);
            }
        });

        cancelShift.setBackground(new java.awt.Color(0, 51, 51));
        cancelShift.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelShift.setForeground(new java.awt.Color(255, 255, 255));
        cancelShift.setText("Cancel Staff");
        cancelShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelShiftActionPerformed(evt);
            }
        });

        leave.setBackground(new java.awt.Color(0, 51, 51));
        leave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        leave.setForeground(new java.awt.Color(255, 255, 255));
        leave.setText("Book Leave");
        leave.setMaximumSize(new java.awt.Dimension(89, 23));
        leave.setMinimumSize(new java.awt.Dimension(89, 23));
        leave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonContainerLayout = new javax.swing.GroupLayout(buttonContainer);
        buttonContainer.setLayout(buttonContainerLayout);
        buttonContainerLayout.setHorizontalGroup(
            buttonContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookShift, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelShift, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonContainerLayout.setVerticalGroup(
            buttonContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonContainerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bookShift)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelShift)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        buttonContainerLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bookShift, cancelShift, leave});

        jPanel1.add(buttonContainer, java.awt.BorderLayout.LINE_START);

        jPanel3.setPreferredSize(new java.awt.Dimension(116, 402));

        logoutButton.setBackground(new java.awt.Color(255, 255, 255));
        logoutButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(0, 102, 102));
        logoutButton.setText("Logut");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutButton))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.LINE_END);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, staffList3, allStaff);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${employeeid}"));
        columnBinding.setColumnName("Employeeid");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${firstname}"));
        columnBinding.setColumnName("Firstname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastname}"));
        columnBinding.setColumnName("Lastname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${position}"));
        columnBinding.setColumnName("Position");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${startOfEmployement}"));
        columnBinding.setColumnName("Start Of Employement");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        allStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allStaffMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(allStaff);

        staffInfo.addTab("All Staff", jScrollPane2);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, shiftList4, allShifts);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${shiftreference}"));
        columnBinding.setColumnName("Shiftreference");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${shiftdate}"));
        columnBinding.setColumnName("Shiftdate");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${starttime}"));
        columnBinding.setColumnName("Starttime");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${endtime}"));
        columnBinding.setColumnName("Endtime");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ward}"));
        columnBinding.setColumnName("Ward");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${shifttype}"));
        columnBinding.setColumnName("Shifttype");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        allShifts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allShiftsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(allShifts);

        staffInfo.addTab("All Shifts", jScrollPane4);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, staffleaveList, staffOnLeave);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${employeeid}"));
        columnBinding.setColumnName("Employeeid");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${firstname}"));
        columnBinding.setColumnName("Firstname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastname}"));
        columnBinding.setColumnName("Lastname");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        staffOnLeave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffOnLeaveMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(staffOnLeave);

        staffInfo.addTab("Staff on leave", jScrollPane5);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, staffbookingList5, bookedStaff);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bookingid}"));
        columnBinding.setColumnName("Bookingid");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${employeeid}"));
        columnBinding.setColumnName("Employeeid");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${shiftreference}"));
        columnBinding.setColumnName("Shiftreference");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${firstname}"));
        columnBinding.setColumnName("Firstname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastname}"));
        columnBinding.setColumnName("Lastname");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        bookedStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookedStaffMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookedStaff);

        staffInfo.addTab("Staff Booking", jScrollPane1);

        jPanel1.add(staffInfo, java.awt.BorderLayout.CENTER);

        menu.setText("File");

        addNewEmpl.setText("Add Employee");
        addNewEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewEmplActionPerformed(evt);
            }
        });
        menu.add(addNewEmpl);

        removeEmployee.setText("Remove Employee");
        removeEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEmployeeActionPerformed(evt);
            }
        });
        menu.add(removeEmployee);

        jMenuBar1.add(menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewEmplActionPerformed
        NewEmployeeForm newEmpl = new NewEmployeeForm();
        newEmpl.setVisible(true);
    }//GEN-LAST:event_addNewEmplActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        closeWindow();
        EmployeeLogin log = new EmployeeLogin();
        log.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void removeEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEmployeeActionPerformed
        String employeeID = JOptionPane.showInputDialog(this, "Enter employee ID to be removed");
        String message = employeeControl.deleteEmployee(convertStringtoInt(employeeID));
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_removeEmployeeActionPerformed

    private void bookShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookShiftActionPerformed
            int row = allStaff.getSelectedRow();
            Object ob  = allStaff.getValueAt(row, 0);
            String employeeID = ob.toString();
            String shiftRef = JOptionPane.showInputDialog("Please enter Shift Reference no");
            String firstname  = (String)allStaff.getValueAt(row, 1);
            String lastname  = (String)allStaff.getValueAt(row, 2);
            String msg = shiftControl.bookEmployee(convertStringtoInt(employeeID),convertStringtoInt(shiftRef),firstname,lastname);
            JOptionPane.showMessageDialog(this,msg);
                                             
    }//GEN-LAST:event_bookShiftActionPerformed

    private void cancelShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelShiftActionPerformed
            int row = bookedStaff.getSelectedRow();
            Object ob  = bookedStaff.getValueAt(row, 0);
            String bookingID = ob.toString();
            String msg = shiftControl.cancelEmployee(convertStringtoInt(bookingID));      
            JOptionPane.showMessageDialog(this,msg);
    }//GEN-LAST:event_cancelShiftActionPerformed

    private void leaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveActionPerformed

            int row = allStaff.getSelectedRow();      
            Object ob  = allStaff.getValueAt(row, 0);
            String employeeID = ob.toString();
            String firstname  = (String)allStaff.getValueAt(row, 1);
            String lastname  = (String)allStaff.getValueAt(row, 2);
            String msg = employeeControl.setStaffLeave(convertStringtoInt(employeeID), firstname,lastname);        
            JOptionPane.showMessageDialog(this, msg);
    }//GEN-LAST:event_leaveActionPerformed

    private void allStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allStaffMouseClicked
      bookShift.setVisible(true);
      leave.setVisible(true);
    }//GEN-LAST:event_allStaffMouseClicked

    private void staffOnLeaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffOnLeaveMouseClicked
       setButtonVisbiliy();
    }//GEN-LAST:event_staffOnLeaveMouseClicked

    private void allShiftsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allShiftsMouseClicked
       setButtonVisbiliy();
    }//GEN-LAST:event_allShiftsMouseClicked

    private void bookedStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookedStaffMouseClicked
        cancelShift.setVisible(true);
    }//GEN-LAST:event_bookedStaffMouseClicked
   private int convertStringtoInt(String id){
         return Integer.parseInt(id);
     }
   
   private void setButtonVisbiliy(){
   bookShift.setVisible(false);
   cancelShift.setVisible(false);
   leave.setVisible(false);

   }
   
    private void closeWindow() {
        WindowEvent close = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(close);
    }
 
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager StaffManagementPUEntityManager;
    private javax.swing.JMenuItem addNewEmpl;
    private javax.swing.JTable allShifts;
    private javax.swing.JTable allStaff;
    private javax.swing.JButton bookShift;
    private javax.swing.JTable bookedStaff;
    private javax.swing.JPanel buttonContainer;
    private javax.swing.JButton cancelShift;
    private javax.swing.JLabel heading;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton leave;
    private javax.swing.JButton logoutButton;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuItem removeEmployee;
    private java.util.List<staffmanagement.Shift> shiftList;
    private java.util.List<staffmanagement.Shift> shiftList1;
    private java.util.List<staffmanagement.Shift> shiftList2;
    private java.util.List<staffmanagement.Shift> shiftList3;
    private java.util.List<staffmanagement.Shift> shiftList4;
    private javax.persistence.Query shiftQuery;
    private javax.persistence.Query shiftQuery1;
    private javax.persistence.Query shiftQuery2;
    private javax.persistence.Query shiftQuery3;
    private javax.persistence.Query shiftQuery4;
    private javax.swing.JTabbedPane staffInfo;
    private java.util.List<staffmanagement.Staff> staffList;
    private java.util.List<staffmanagement.Staff> staffList1;
    private java.util.List<staffmanagement.Staff> staffList2;
    private java.util.List<staffmanagement.Staff> staffList3;
    private java.util.List<staffmanagement.Staff> staffList4;
    private javax.swing.JTable staffOnLeave;
    private javax.persistence.Query staffQuery;
    private javax.persistence.Query staffQuery1;
    private javax.persistence.Query staffQuery2;
    private javax.persistence.Query staffQuery3;
    private javax.persistence.Query staffQuery4;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList1;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList2;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList3;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList4;
    private java.util.List<staffmanagement.Staffbooking> staffbookingList5;
    private javax.persistence.Query staffbookingQuery;
    private javax.persistence.Query staffbookingQuery1;
    private javax.persistence.Query staffbookingQuery2;
    private javax.persistence.Query staffbookingQuery3;
    private javax.persistence.Query staffbookingQuery4;
    private javax.persistence.Query staffbookingQuery5;
    private java.util.List<staffmanagement.Staffleave> staffleaveList;
    private javax.persistence.Query staffleaveQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables



}
