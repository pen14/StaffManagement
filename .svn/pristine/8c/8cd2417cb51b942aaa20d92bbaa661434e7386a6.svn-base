/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package staffmanagement;

import java.io.Serializable;
import java.util.Collection;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author penpen
 */
@Entity
@Table(catalog = "", schema = "PENILOP")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Employee.findAll", query = "SELECT e FROM Employee e"),
    @NamedQuery(name = "Employee.findByEmployeeid", query = "SELECT e FROM Employee e WHERE e.employeeid = :employeeid"),
    @NamedQuery(name = "Employee.findByFirstname", query = "SELECT e FROM Employee e WHERE e.firstname = :firstname"),
    @NamedQuery(name = "Employee.findByLastname", query = "SELECT e FROM Employee e WHERE e.lastname = :lastname"),
    @NamedQuery(name = "Employee.findByTelno", query = "SELECT e FROM Employee e WHERE e.telno = :telno"),
    @NamedQuery(name = "Employee.findByAddress", query = "SELECT e FROM Employee e WHERE e.address = :address"),
    @NamedQuery(name = "Employee.findByStartOfEmplyment", query = "SELECT e FROM Employee e WHERE e.startOfEmplyment = :startOfEmplyment")})
public class Employee implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @Column(nullable = false, length = 16)
    private String employeeid;
    @Basic(optional = false)
    @Column(nullable = false, length = 64)
    private String firstname;
    @Basic(optional = false)
    @Column(nullable = false, length = 64)
    private String lastname;
    @Basic(optional = false)
    @Column(nullable = false, length = 11)
    private String telno;
    @Basic(optional = false)
    @Column(nullable = false, length = 64)
    private String address;
    @Basic(optional = false)
    @Column(name = "START_OF_EMPLYMENT", nullable = false)
    @Temporal(TemporalType.DATE)
    private Date startOfEmplyment;
    @OneToMany(mappedBy = "employeeid")
    private Collection<EmployeesShift> employeesShiftCollection;

    public Employee() {
    }

    public Employee(String employeeid) {
        this.employeeid = employeeid;
    }

    public Employee(String employeeid, String firstname, String lastname, String telno, String address, Date startOfEmplyment) {
        this.employeeid = employeeid;
        this.firstname = firstname;
        this.lastname = lastname;
        this.telno = telno;
        this.address = address;
        this.startOfEmplyment = startOfEmplyment;
    }

    public String getEmployeeid() {
        return employeeid;
    }

    public void setEmployeeid(String employeeid) {
        this.employeeid = employeeid;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getTelno() {
        return telno;
    }

    public void setTelno(String telno) {
        this.telno = telno;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public Date getStartOfEmplyment() {
        return startOfEmplyment;
    }

    public void setStartOfEmplyment(Date startOfEmplyment) {
        this.startOfEmplyment = startOfEmplyment;
    }

    @XmlTransient
    public Collection<EmployeesShift> getEmployeesShiftCollection() {
        return employeesShiftCollection;
    }

    public void setEmployeesShiftCollection(Collection<EmployeesShift> employeesShiftCollection) {
        this.employeesShiftCollection = employeesShiftCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (employeeid != null ? employeeid.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Employee)) {
            return false;
        }
        Employee other = (Employee) object;
        if ((this.employeeid == null && other.employeeid != null) || (this.employeeid != null && !this.employeeid.equals(other.employeeid))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "staffmanagement.Employee[ employeeid=" + employeeid + " ]";
    }
    
}
